res.sim2[is.na(res.sim2)]<-0
p<-c()
for(i in names(obs)){
p[i]<-sum(res.sim2[i,]>obs[i])/sim
}
p
df<-data.frame(obs=obs,sim.p=p,sim.adjp=p.adjust(p))
df<-df[,-1]
kbl(df, longtable=TRUE,align = "c",caption = "Observed frequences and simulated p-values")
#%>%
# kable_styling(latex_options = c("repeated_header","striped"),"hold_position")
#scroll_box(width = "500px", height = "600px")
#footnote(number = c("p.adjust<0.05 Bonferroni correction"))
dati<-read_xlsx("Revised-SupplementaryTable11b-BUSTED-speciestrees_CV.xlsx")
dati<-dati[dati$"p-value"!="NA",]
dati<-data.frame(dati)
#params$colonna<-"p.value"
#params$colonna<-"FDR"
obs<-table(dati$Gene[dati[,params$colonna]<0.01])
sim<-10000
res.sim<-matrix(nrow=nrow(dati),ncol=sim)
for(i in 1:sim){
ind<-sample(1:nrow(dati),size = nrow(dati),replace = F)
res.sim[,i]<-dati[ind,params$colonna]
}
res.sim2<-matrix(nrow=length(unique(dati$Gene)),ncol=sim)
row.names(res.sim2)<-unique(dati$Gene)
for(i in 1:ncol(res.sim)){
tmp<-res.sim[,i]
tmp<-table(dati$Gene[tmp<0.01])
res.sim2[names(tmp),i]<-tmp
}
obs<-table(dati$Gene[dati[,params$colonna]<0.01])
res.sim2[is.na(res.sim2)]<-0
p<-c()
for(i in names(obs)){
p[i]<-sum(res.sim2[i,]>obs[i])/sim
}
df<-data.frame(obs=obs,sim.p=p,sim.adjp=p.adjust(p))
df<-df[,-1]
df %>%
mutate(
sim.p = ifelse(p.value < 0.05,
cell_spec(sim.p, "html", background = "lightgreen", bold = T),
cell_spec(sim.p, "html"))
) %>%
kable("html", escape = F) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width = F)
df %>%
mutate(
sim.p = ifelse(sim.p < 0.05,
cell_spec(sim.p, "html", background = "lightgreen", bold = T),
cell_spec(sim.p, "html"))
) %>%
kable("html", escape = F) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width = F)
df %>%
mutate(
sim.p = ifelse(sim.p < 0.05,
cell_spec(sim.p, "html", background = "#ccffcc", bold = T),
cell_spec(sim.p, "html"))
) %>%
kable("html", escape = F) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width = F)
df %>%
mutate(
sim.p = ifelse(sim.p < 0.05,
cell_spec(sim.p, "html", background = "#ffffe6", bold = T),
cell_spec(sim.p, "html"))
) %>%
kable("html", escape = F) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width = F)
df %>%
mutate(
sim.p = ifelse(sim.p < 0.05,
cell_spec(sim.p, "html", background = "#ffffe6", bold = T),
cell_spec(sim.p, "html"));
df %>%
mutate(
sim.p = ifelse(sim.p < 0.05,
cell_spec(sim.p, "html", background = "#ffffe6", bold = T),
cell_spec(sim.p, "html"))
sim.adjp = ifelse(sim.adjp < 0.05,
df %>%
mutate(
sim.p = ifelse(sim.p < 0.05,
cell_spec(sim.p, "html", background = "#ffffe6", bold = T),
cell_spec(sim.p, "html")),
sim.adjp = ifelse(sim.adjp < 0.05,
cell_spec(sim.adjp, "html", background = "#ffffe6", bold = T),
cell_spec(sim.adjp, "html"))
) %>%
kable("html", escape = F) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width = F)
df %>%
mutate(
sim.p = ifelse(sim.p < 0.05,
cell_spec(sim.p, "html", background = "#ffffe6", bold = T),
cell_spec(sim.p, "html")),
sim.adjp = ifelse(sim.adjp < 0.05,
cell_spec(sim.adjp, "html", background = "#ccffcc", bold = T),
cell_spec(sim.adjp, "html"))
) %>%
kable("html", escape = F) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width = F)
BiocManager::install("blogdown")
warnings()
warnings()
blogdown::new_site(theme="thegeeklab/hugo-geekdoc")
blogdown::new_site(theme="/thegeeklab/hugo-geekblog")
blogdown::new_site()
blogdown::install_hugo()
blogdown::install_hugo()
blogdown::install_hugo()
blogdown::new_site()
blogdown::new_site(theme="thegeeklab/hugo-geekblog")
setwd("~/Documents/LAVORO/Documents/SITOWEB")
blogdown::new_site(dir="~/Documents/LAVORO/Documents/SITOWEB/","theme="thegeeklab/hugo-geekblog")
blogdown::new_site(dir="~/Documents/LAVORO/Documents/SITOWEB/",theme="thegeeklab/hugo-geekblog")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::new_site(dir="~/Documents/LAVORO/Documents/SITOWEB/",theme="syui/hugo-theme-wave")
blogdown::new_site(dir="~/Documents/LAVORO/Documents/SITOWEB/",theme="syui/hugo-theme-wave")
blogdown:::update_meta_addin()
blogdown:::serve_site()
blogdown::hugo_build()
blogdown::new_site(dir="~/Documents/LAVORO/Documents/SITOWEB/",theme="sudorook/capsule themes/capsule")
blogdown::new_site(dir="~/Documents/LAVORO/Documents/SITOWEB/",theme="sudorook/capsule\ themes/capsule")
blogdown::new_site(dir="~/Documents/LAVORO/Documents/SITOWEB/",theme="capsule")
blogdown::new_site(dir="~/Documents/LAVORO/Documents/SITOWEB/",theme="sudorook/capsule")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
servr::browse_last()
blogdown:::serve_site()
servr::browse_last()
servr::browse_last()
blogdown::hugo_convert(unsafe = TRUE)
blogdown::new_site(dir="~/Documents/LAVORO/Documents/SITOWEB/")
blogdown:::serve_site()
servr::browse_last()
servr::browse_last()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown::stop_server()
blogdown::new_site(dir="~/Documents/LAVORO/Documents/SITOWEB4/",theme = "~/Dowloads/starter-academic-master/")
blogdown::new_site(dir="~/Documents/LAVORO/Documents/SITOWEB4/",theme = "~/Dowloads/starter-academic-master.zip")
blogdown::new_site(dir="~/Documents/LAVORO/Documents/SITOWEB4/",theme = "~/Dowloads/starter-academic-master.zip")
blogdown:::serve_site()
blogdown::new_site(dir="~/Documents/LAVORO/Documents/SITOWEB4/",theme = "gcushen/hugo-academic")
blogdown::stop_server()
blogdown::new_site(dir="~/Documents/LAVORO/Documents/SITOWEB4/",theme = "gcushen/hugo-academic")
blogdown:::serve_site()
blogdown::stop_server()
load("/Volumes/GoogleDrive/Il mio Drive/AAA-VQR2019/SIMULAZIONI/nuove/210315/210412/vqr_239.rda")
tmp<-selected
load("/Volumes/GoogleDrive/Il mio Drive/AAA-VQR2019/SIMULAZIONI/nuove/210315/autocit_15pct_5500_bestpct.rda")
View(selected)
View(tmp)
setdiff(tmp$handle,selected$handle)
flag<-setdiff(tmp$handle,selected$handle)
tmp[flag%in%tmp$handle,]
tmp[flag%in%tmp$handle,]
flag%in%tmp$handle
tmp[tmp$handle%in%flag,]
View(tmp[tmp$handle%in%flag,])
View(tmp)
load("/Volumes/GoogleDrive/Il mio Drive/AAA-VQR2019/SIMULAZIONI/nuove/210315/210412/vqr_239.rda")
saveRDS(selected,file="finale-239.rds")
load("/Volumes/GoogleDrive/Il mio Drive/AAA-VQR2019/SIMULAZIONI/nuove/210315/210412/vqr_213.rda")
saveRDS(selected,file="finale-213.rds")
getwd()
setwd("~/Google Drive/Il mio Drive/AAA-VQR2019/SIMULAZIONI/nuove/210315/210412")
knitr::opts_chunk$set(echo = TRUE)
l<-list.files()
l<-l[grep(pattern = ".rds",l)]
l<- l[c(1,2,9)]
l
l
l<-list.files()
l<-l[grep(pattern = ".rds",l)]
l<- l[c(1,2,3)]
l
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(kableExtra)
library(knitr)
library(formattable)
library(dplyr)
setwd("~/Google Drive/Il mio Drive/AAA-VQR2019/SIMULAZIONI/nuove/210315/210412")
calcolo.score<-function(dat,max.score,n.vip,n.doc){
col1<-grep("citescore",names(dat))
col2<-grep("if5",names(dat))
max.score<-nrow(dat)*20
perc<-sum(dat$score)/max.score
media.vip<-sum(dat$vip)/n.vip
perc.1A<-sum(unlist(apply(dat[,c(col1:col2)],1,max))==5)/nrow(dat)
perc.1A.vip<-sum(unlist(apply(dat[dat$vip==TRUE,c(col1:col2)],1,max))==5)/sum(dat$vip)
n.c<-sum(dat$lowest_score<=3 & dat$lowest_score>0)
n.nd<-sum(dat$lowest_score==0)
n.inattivi<-n.doc-length(unique(dat$author))
list(perc.sul.maxScore=perc,media.lavori.Neo=media.vip,
perc.lavori.maxA=perc.1A,perc.lavori.maxA.vip=perc.1A.vip,
n.lavori.con.c=n.c,n.lavori.nd=n.nd,n.doc.inattivi=n.inattivi)
}
l<-list.files()
l<-l[grep(pattern = ".rds",l)]
l<- l[c(1,2,3)]
sim<-list()
for(i in l) sim[[i]]<-readRDS(file=i)
res<-lapply(sim,calcolo.score,max.score=4780,n.vip=47,n.doc=80)
library(plyr)
df <- ldply (res, data.frame)
order<-c(1,2,3)
df<-df[order,]
df %>%
kable("html", escape = F,caption = "Metriche") %>%
kable_styling(bootstrap_options = c("striped", "hover", "responsive"), full_width = F) %>%
footnote(general = "perc.sul.maxScore= Percentuale dello score sul massimo;\n media.lavori.Neo = Media dei lavori dei neo assunti;\n perc.lavori.maxA= percentuale sul totale di lavori che hanno almeno una A;\n perc.lavori.maxA.vip = percentuale sul numero conferito dai neoassunti di lavori che hanno almeno una A;\n n.lavori.con.c =  numero di lavori che hanno almeno una C;\n n.lavori.nd = Numero lavori che sono multidisciplinari;\n n.doc.inattivi = Numero docenti che non consegnano prodotti."
)
sim<-sim[order]
colnames(sim[[2]])
library(RColorBrewer)
library(ggplot2)
cl<-brewer.pal(7, "Set3")
names(cl)<-c(20,19.5,19,18,17,16,15)
sel<-data.frame(sim["finale-239.rds"])
ggplot(sel, aes(finale-239.rds.score)) +
ggplot(sel, aes("finale-239.rds.score")) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..), y= ..prop.. ), stat= "count", vjust = -.5)+
scale_y_continuous(labels=scales::percent) +
scale_fill_manual(values=cl) +
ylab("relative frequencies")+ggtitle("numero max lavori 15 perc ")
library(RColorBrewer)
library(ggplot2)
cl<-brewer.pal(7, "Set3")
names(cl)<-c(20,19.5,19,18,17,16,15)
sel<-data.frame(sim["finale-239.rds"])
ggplot(sel, aes("finale-239.rds.score")) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..), y= ..prop.. ), stat= "count", vjust = -.5)+
scale_y_continuous(labels=scales::percent) +
scale_fill_manual(values=cl) +
ylab("relative frequencies")+ggtitle("numero max lavori 15 perc ")
sel<-data.frame(sim["finale-213.rds"])
ggplot(sel, aes("finale-239.rds.score")) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..), y= ..prop.. ), stat= "count", vjust = -.5)+
scale_y_continuous(labels=scales::percent) +
scale_fill_manual(values=cl) +
ylab("relative frequencies")+ggtitle("numero max lavori 15 perc ")
sel<-data.frame(sim["autocit_15pct_5500_bestpct.rds"])
ggplot(sel, aes(autocit_15pct_5500.rds.score)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..), y= ..prop.. ), stat= "count", vjust = -.5)+
scale_y_continuous(labels=scales::percent) +
scale_fill_manual(values=cl) +
ylab("relative frequencies")+ggtitle("numero max lavori 15 perc e lavori con autocit")
sel<-data.frame(sim["autocit_15pct_5500_bestpct.rds"])
head(sel)
ggplot(sel, aes(autocit_15pct_5500_bestpct.rds.score)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..), y= ..prop.. ), stat= "count", vjust = -.5)+
scale_y_continuous(labels=scales::percent) +
scale_fill_manual(values=cl) +
ylab("relative frequencies")+ggtitle("numero max lavori 15 perc e lavori con autocit")
sel<-data.frame(sim["finale-239.rds"])
head(sel)
ggplot(sel, aes("finale.239.rds.score")) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..), y= ..prop.. ), stat= "count", vjust = -.5)+
scale_y_continuous(labels=scales::percent) +
scale_fill_manual(values=cl) +
ylab("relative frequencies")+ggtitle("numero max lavori 15 perc ")
sel<-data.frame(sim["finale-239.rds"])
head(sel)
ggplot(sel, aes(finale.239.rds.score)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..), y= ..prop.. ), stat= "count", vjust = -.5)+
scale_y_continuous(labels=scales::percent) +
scale_fill_manual(values=cl) +
ylab("relative frequencies")+ggtitle("numero max lavori 15 perc ")
sel<-data.frame(sim["finale-213.rds"])
ggplot(sel, aes(finale.239.rds.score)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..), y= ..prop.. ), stat= "count", vjust = -.5)+
scale_y_continuous(labels=scales::percent) +
scale_fill_manual(values=cl) +
ylab("relative frequencies")+ggtitle("numero max lavori 15 perc ")
load("/Volumes/GoogleDrive/Il mio Drive/AAA-VQR2019/SIMULAZIONI/nuove/210315/210412/vqr_239.rda")
write.table(selected,file="corretto-bergantino.txt",sep="\t",quote=F)
View(selected)
setwd("~/Documents/LAVORO/Documents/SITOWEB4")
blogdown:::serve_site()
BiocManager::install("blogdown")
blogdown::install_hugo("0.82.0")
blogdown::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
bibtex_2academic <- function(bibfile,
outfold,
abstract = FALSE,
overwrite = FALSE) {
require(RefManageR)
require(dplyr)
require(stringr)
require(anytime)
# Import the bibtex file and convert to data.frame
mypubs   <- ReadBib(bibfile, check = "warn", .Encoding = "UTF-8") %>%
as.data.frame()
# assign "categories" to the different types of publications
mypubs   <- mypubs %>%
dplyr::mutate(
pubtype = dplyr::case_when(document_type == "Article" ~ "2",
document_type == "Article in Press" ~ "2",
document_type == "InProceedings" ~ "1",
document_type == "Proceedings" ~ "1",
document_type == "Conference" ~ "1",
document_type == "Conference Paper" ~ "1",
document_type == "MastersThesis" ~ "3",
document_type == "PhdThesis" ~ "3",
document_type == "Manual" ~ "4",
document_type == "TechReport" ~ "4",
document_type == "Book" ~ "5",
document_type == "InCollection" ~ "6",
document_type == "InBook" ~ "6",
document_type == "Misc" ~ "0",
TRUE ~ "0"))
# create a function which populates the md template based on the info
# about a publication
create_md <- function(x) {
# define a date and create filename by appending date and start of title
if (!is.na(x[["year"]])) {
x[["date"]] <- paste0(x[["year"]], "-01-01")
} else {
x[["date"]] <- "2999-01-01"
}
filename <- paste(x[["date"]], x[["title"]] %>%
str_replace_all(fixed(" "), "_") %>%
str_remove_all(fixed(":")) %>%
str_sub(1, 20) %>%
paste0(".md"), sep = "_")
# start writing
if (!file.exists(file.path(outfold, filename)) | overwrite) {
fileConn <- file.path(outfold, filename)
write("+++", fileConn)
# Title and date
write(paste0("title = \"", x[["title"]], "\""), fileConn, append = T)
write(paste0("date = \"", anydate(x[["date"]]), "\""), fileConn, append = T)
# Authors. Comma separated list, e.g. `["Bob Smith", "David Jones"]`.
auth_hugo <- str_replace_all(x["author"], " and ", "\", \"")
auth_hugo <- stringi::stri_trans_general(auth_hugo, "latin-ascii")
write(paste0("authors = [\"", auth_hugo,"\"]"), fileConn, append = T)
# Publication type. Legend:
# 0 = Uncategorized, 1 = Conference paper, 2 = Journal article
# 3 = Manuscript, 4 = Report, 5 = Book,  6 = Book section
write(paste0("publication_types = [\"", x[["pubtype"]],"\"]"),
fileConn, append = T)
# Publication details: journal, volume, issue, page numbers and doi link
publication <- x[["journal"]]
if (!is.na(x[["volume"]])) publication <- paste0(publication,
", (", x[["volume"]], ")")
if (!is.na(x[["number"]])) publication <- paste0(publication,
", ", x[["number"]])
if (!is.na(x[["pages"]])) publication <- paste0(publication,
", _pp. ", x[["pages"]], "_")
if (!is.na(x[["doi"]])) publication <- paste0(publication,
", ", paste0("https://doi.org/",
x[["doi"]]))
write(paste0("publication = \"", publication,"\""), fileConn, append = T)
write(paste0("publication_short = \"", publication,"\""),fileConn, append = T)
# Abstract and optional shortened version.
if (abstract) {
write(paste0("abstract = \"", x[["abstract"]],"\""), fileConn, append = T)
} else {
write("abstract = \"\"", fileConn, append = T)
}
write(paste0("abstract_short = \"","\""), fileConn, append = T)
# other possible fields are kept empty. They can be customized later by
# editing the created md
write("image_preview = \"\"", fileConn, append = T)
write("selected = false", fileConn, append = T)
write("projects = []", fileConn, append = T)
write("tags = []", fileConn, append = T)
#links
write("url_pdf = \"\"", fileConn, append = T)
write("url_preprint = \"\"", fileConn, append = T)
write("url_code = \"\"", fileConn, append = T)
write("url_dataset = \"\"", fileConn, append = T)
write("url_project = \"\"", fileConn, append = T)
write("url_slides = \"\"", fileConn, append = T)
write("url_video = \"\"", fileConn, append = T)
write("url_poster = \"\"", fileConn, append = T)
write("url_source = \"\"", fileConn, append = T)
#other stuff
write("math = true", fileConn, append = T)
write("highlight = true", fileConn, append = T)
# Featured image
write("[header]", fileConn, append = T)
write("image = \"\"", fileConn, append = T)
write("caption = \"\"", fileConn, append = T)
write("+++", fileConn, append = T)
}
}
# apply the "create_md" function over the publications list to generate
# the different "md" files.
apply(mypubs, FUN = function(x) create_md(x), MARGIN = 1)
}
setwd("~/Downloads")
my_bibfile <- "scopus.bib"
out_fold   <- "myoutfolder"
bibtex_2academic(bibffile  = my_bibfile,
outfold   = out_fold,
abstract  = FALSE)
my_bibfile
bibtex_2academic
my_bibfile <- "scopus.bib"
out_fold   <- "myoutfolder"
bibtex_2academic(bibfile  = my_bibfile,
outfold   = out_fold,
abstract  = FALSE)
BiocManager::install("RefManageR")
my_bibfile <- "scopus.bib"
out_fold   <- "myoutfolder"
bibtex_2academic(bibfile  = my_bibfile,
outfold   = out_fold,
abstract  = FALSE)
remotes::install_github("ROpenSci/bibtex")
my_bibfile <- "scopus.bib"
out_fold   <- "myoutfolder"
bibtex_2academic(bibfile  = my_bibfile,
outfold   = out_fold,
abstract  = FALSE)
my_bibfile <- "scopus.bib"
out_fold   <- "myoutfolder"
bibtex_2academic(bibfile  = my_bibfile,
outfold   = out_fold,
abstract  = FALSE)
install.packages("anytime")
my_bibfile <- "scopus.bib"
out_fold   <- "myoutfolder"
bibtex_2academic(bibfile  = my_bibfile,
outfold   = out_fold,
abstract  = FALSE)
library(anytime)
bibtex_2academic
my_bibfile <- "scopus.bib"
out_fold   <- "myoutfolder"
bibtex_2academic(bibfile  = my_bibfile,
outfold   = out_fold,
abstract  = FALSE, overwrite = TRUE)
my_bibfile <- "scopus.bib"
out_fold   <- "myoutfolder"
bibtex_2academic(bibfile  = my_bibfile,
outfold   = out_fold,
abstract  = FALSE, overwrite = TRUE)
my_bibfile <- "scopus.bib"
out_fold   <- "myoutfolder"
bibtex_2academic(bibfile  = my_bibfile,
outfold   = out_fold,
abstract  = FALSE, overwrite = TRUE)
blogdown:::serve_site()
bibtex_2academic
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::stop_server()
blogdown::stop_server()
blogdown::stop_server()
blogdown::stop_server()
blogdown::stop_server()
blogdown::stop_server()
blogdown::stop_server()
blogdown::stop_server()
blogdown::stop_server()
blogdown::stop_server()
blogdown:::serve_site()
blogdown::stop_server()
blogdown::stop_server()
blogdown::stop_server()
blogdown:::serve_site()
BiocManager::install("blogdown")
blogdown:::preview_site()
blogdown::install_hugo("0.82.0")
blogdown:::preview_site()
blogdown::check_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site("public/")
blogdown::serve_site("public/")
blogdown::serve_site("public")
blogdown::build_site()
blogdown::build_site(.)
?blogdown::build_site
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown::serve_site()
